name: CI with dynamic parallel matrix

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NJOBS: '6'
  TIMEOUT: '-1'    # nbconvert timeout
  EXTRA_ARGS: ''   # Extra arguments for nbconvert
  CACHE_NUM: '1'
  JULIA_NUM_THREADS: 'auto'
  JULIA_CONDAPKG_BACKEND: 'Null'
  JULIA_CI: 'true'
  PY_VER: '3.12'

jobs:
  CI:
    runs-on: self-hosted
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      id: cp
      with:
        python-version: ${{ env.PY_VER }}
    - name: Install python packages
      run: pip install -r requirements.txt
    - name: Read Julia version
      uses: SebRollen/toml-action@v1.0.2
      id: read_toml
      with:
        file: 'Manifest.toml'
        field: 'julia_version'
    - name: Install Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: ${{ steps.read_toml.outputs.value }}
        show-versioninfo: 'true'
    - name: Install Julia packages
      run: |
        julia --color=yes -e 'using Pkg; Pkg.add(["IJulia"])'
        julia --project=@. --color=yes -e 'using Pkg, Dates; Pkg.instantiate(); Pkg.resolve(); Pkg.precompile(); Pkg.gc(collect_delay=Day(0))'
    - name: Install IJulia kernel
      run: julia --color=yes -e 'using IJulia; installkernel("Julia", "--project=@.")'
    - name: Execute Notebooks
      run: >
        find docs -type f -name '*.ipynb' |
        parallel --joblog jobs.log -j${NJOBS} jupyter nbconvert --to notebook --execute --inplace ${{ env.EXTRA_ARGS }}
        --ExecutePreprocessor.timeout=${{ env.TIMEOUT }}
        --ExecutePreprocessor.kernel_name=julia-1.$(julia -e 'print(VERSION.minor)')
        {}
    - name: Show execution stats
      run: cat jobs.log
    - name: Build website
      run: jupyter-book build docs/
    - name: Upload pages artifact
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: actions/upload-pages-artifact@v2
      with:
        path: docs/_build/html/

  # Deployment job
  deploy:
    name: Deploy to GitHub pages
    needs: CI
    if: ${{ github.ref == 'refs/heads/main' }}
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
