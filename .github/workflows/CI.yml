name: Build Docker Image and Jupyter Notebooks

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  JULIA_NUM_THREADS: 2

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: .ci/Dockerfile
          push: false
          tags: ${{ env.IMAGE_NAME }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
  execute:
    needs: docker
    strategy:
      fail-fast: false
      matrix:
        notebook:
          - index
          - expression-level-effects
          - expression-level
          - model-desc
          - steadystates
          - validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: .ci/Dockerfile
          load: true
          tags: ${{ env.IMAGE_NAME }}:test
          cache-from: type=gha

      - name: Build a Notebook
        run: docker run -v ${{ github.workspace }}:/work -e JULIA_NUM_THREADS=$JULIA_NUM_THREADS ${{ env.IMAGE_NAME }}:test jupyter nbconvert --to notebook --ExecutePreprocessor.timeout=600 --execute --inplace /work/docs/${{ matrix.notebook }}.ipynb

      - name: Upload a Notebook
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.notebook }}
          path: docs/${{ matrix.notebook }}.ipynb

  jupyter-book:
    needs: execute
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: .ci/Dockerfile
          load: true
          tags: ${{ env.IMAGE_NAME }}:test
          cache-from: type=gha
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v1
      - run: mkdir out
      - name: Download notebooks
        uses: actions/download-artifact@v3
        with:
          path: out/
      - name: Move notebooks
        run: find out/ -type f -iname '*.ipynb' -exec mv -t docs/ {} +
      - name: Build website
        run: docker run -v ${{ github.workspace }}:/work ${{ env.IMAGE_NAME }}:test jb build /work/docs/ -v
      - name: Upload page artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs/_build/html

  docker-push:
    needs: execute
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,priority=600, enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=sha,enable=true,priority=100,prefix=,suffix=,format=long
          flavor: |
            latest=false
      - name: Push Docker Image
        # Do not push on PR's
        uses: docker/build-push-action@v3
        with:
          context: .
          file: .ci/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deployment job
  deploy:
    needs: jupyter-book
    if: github.ref == 'refs/heads/main'
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
