name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Jupyter book outputs
        uses: actions/cache@v3
        env:
          cache-name: "jb"
        with:
          path: docs/_build/.jupyter_cache/
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Manifest.toml', 'requirements.txt') }}-${{ hashFiles('docs/**/*.ipynb', 'docs/**/*.md') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Manifest.toml', 'requirements.txt') }}

      # Workaround for icorrect digest: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to the Container registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=sha,enable=true,priority=100,prefix=,suffix=,format=long
          flavor: |
            latest=false

      - name: Build Docker Image
        # if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker Image
        # if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=inline

      - name: Build Jupyter Books
        run: docker run -v ${{ github.workspace }}:/work ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} jb build /work/docs

      - name: Deploy Website
        uses: peaceiris/actions-gh-pages@v3.8.0
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_orphan: true
          publish_dir: docs/_build/html
          full_commit_message: ${{ github.event.head_commit.message }}
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - x64 - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version:
          - "1.7"
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1.2
      - uses: codecov/codecov-action@v2.1.0
        with:
          file: lcov.info
